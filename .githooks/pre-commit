#!/bin/bash
# Pre-commit hook to convert Obsidian links to GitHub-compatible format

echo "üîó Converting Obsidian links to GitHub-compatible format..."

# Get the directory of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
REPO_ROOT="$(dirname "$SCRIPT_DIR")"

# Check if Python 3 is available
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Error: Python 3 is required for link conversion"
    exit 1
fi

# Check if the conversion script exists
if [ ! -f "$REPO_ROOT/convert_all_obsidian_links.py" ]; then
    echo "‚ùå Error: Link conversion script not found"
    exit 1
fi

# Get list of staged markdown files in obsidian-vault
STAGED_MD_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '^obsidian-vault/.*\.md$' || true)

if [ -z "$STAGED_MD_FILES" ]; then
    echo "‚ÑπÔ∏è  No Obsidian markdown files staged for commit"
    exit 0
fi

echo "üìù Found staged markdown files:"
echo "$STAGED_MD_FILES"

# Convert links in all files (batch operation is more efficient)
cd "$REPO_ROOT"
if python3 convert_all_obsidian_links.py obsidian-vault; then
    echo "‚úÖ Successfully converted Obsidian links"
    
    # Add any files that were modified by the conversion
    MODIFIED_FILES=$(git diff --name-only obsidian-vault/)
    if [ -n "$MODIFIED_FILES" ]; then
        echo "üìÑ Re-staging modified files:"
        echo "$MODIFIED_FILES"
        git add $MODIFIED_FILES
    fi
else
    echo "‚ùå Failed to convert Obsidian links"
    exit 1
fi

echo "üéâ Pre-commit link conversion complete!"
